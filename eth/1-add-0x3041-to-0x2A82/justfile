export rpcUrl := env_var_or_default('ETH_RPC_URL', "https://mainnet.optimism.io")
export signatures := env_var_or_default('SIGNATURES', '')
export TOP_LEVEL_SAFE := "0x2A82Ae142b2e62Cb7D10b55E323ACB1Cab663a26"

simulate:
  #!/usr/bin/env bash
  here=$(pwd)
  cd ../..
  forge script SignFromJson --via-ir --rpc-url ${rpcUrl} --sig "signJson(string)" "${here}/input.json" --sender 0x7cB07FE039a92B3D784f284D919503A381BEC54f

sign hdPath='0':
  #!/usr/bin/env bash
  here=$(pwd)
  cd ../..
  echo "getting signer address..."
  signer=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  echo "Signing with: ${signer}"
  echo ""
  $(go env GOPATH)/bin/eip712sign --ledger --hd-paths "m/44'/60'/{{hdPath}}'/0/0" -- \
  forge script SignFromJson --via-ir --rpc-url ${rpcUrl} --sig "signJson(string)" "${here}/input.json"

execute hdPath='0':
  #!/usr/bin/env bash
  here=$(pwd)
  cd ../..
  sender=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  forge script --fork-url ${rpcUrl} SignFromJson \
  --sig "runJson(string,bytes)" ${here}/input.json ${signatures} \
  --ledger --hd-paths "m/44'/60'/{{hdPath}}'/0/0" --broadcast \
  --sender ${sender}
